// Generated by gencpp from file ros_threads/GiveTime.msg
// DO NOT EDIT!


#ifndef ROS_THREADS_MESSAGE_GIVETIME_H
#define ROS_THREADS_MESSAGE_GIVETIME_H

#include <ros/service_traits.h>


#include <ros_threads/GiveTimeRequest.h>
#include <ros_threads/GiveTimeResponse.h>


namespace ros_threads
{

struct GiveTime
{

typedef GiveTimeRequest Request;
typedef GiveTimeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GiveTime
} // namespace ros_threads


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_threads::GiveTime > {
  static const char* value()
  {
    return "d2ce10c62679a0d54a33dc31ebd4da74";
  }

  static const char* value(const ::ros_threads::GiveTime&) { return value(); }
};

template<>
struct DataType< ::ros_threads::GiveTime > {
  static const char* value()
  {
    return "ros_threads/GiveTime";
  }

  static const char* value(const ::ros_threads::GiveTime&) { return value(); }
};


// service_traits::MD5Sum< ::ros_threads::GiveTimeRequest> should match 
// service_traits::MD5Sum< ::ros_threads::GiveTime > 
template<>
struct MD5Sum< ::ros_threads::GiveTimeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_threads::GiveTime >::value();
  }
  static const char* value(const ::ros_threads::GiveTimeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_threads::GiveTimeRequest> should match 
// service_traits::DataType< ::ros_threads::GiveTime > 
template<>
struct DataType< ::ros_threads::GiveTimeRequest>
{
  static const char* value()
  {
    return DataType< ::ros_threads::GiveTime >::value();
  }
  static const char* value(const ::ros_threads::GiveTimeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_threads::GiveTimeResponse> should match 
// service_traits::MD5Sum< ::ros_threads::GiveTime > 
template<>
struct MD5Sum< ::ros_threads::GiveTimeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_threads::GiveTime >::value();
  }
  static const char* value(const ::ros_threads::GiveTimeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_threads::GiveTimeResponse> should match 
// service_traits::DataType< ::ros_threads::GiveTime > 
template<>
struct DataType< ::ros_threads::GiveTimeResponse>
{
  static const char* value()
  {
    return DataType< ::ros_threads::GiveTime >::value();
  }
  static const char* value(const ::ros_threads::GiveTimeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_THREADS_MESSAGE_GIVETIME_H
